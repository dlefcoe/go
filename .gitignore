# This is a sample .gitignore file.
# You can use comments starting with '#' to explain your rules.

# =======================================================
# Operating System and IDE Files
# =======================================================
# These are files automatically generated by your OS or IDE.
# They are specific to your local setup and should not be shared.

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux (for thumbnail caches and other temp files)
.fuse_hidden*

# Visual Studio Code
.vscode/

# JetBrains IDEs (IntelliJ, PyCharm, WebStorm, etc.)
.idea/
*.iml
*.iws
*.ipr

# =======================================================
# Build Artifacts and Compiled Code
# =======================================================
# These are files generated during the build or compilation process.
# They can be recreated from the source code and shouldn't be tracked.

# Java
*.class
*.jar
*.war
/bin/
/target/

# Python
__pycache__/
*.pyc
*.pyd
*.pyo
.venv/
venv/

# C++
*.o
*.obj
*.exe
*.dll
*.so
/build/

# Node.js
# The `node_modules` directory contains all your project dependencies.
# It should be ignored and instead managed by a package manager like npm or yarn.
/node_modules/

# =======================================================
# Dependencies and Package Management
# =======================================================
# These directories are typically populated by a package manager.

# Bundler (Ruby)
/vendor/bundle

# Composer (PHP)
/vendor/

# =======================================================
# Temporary and Log Files
# =======================================================
# These files are often created during runtime and should not be part of the repository.

# Log files
*.log
npm-debug.log*

# Temporary files
*.tmp
*.temp

# =======================================================
# Sensitive Information
# =======================================================
# Never commit files containing sensitive data like API keys, passwords, or credentials.
# The `.env` file is a common place to store environment-specific configurations.

.env

# =======================================================
# Directories to Keep, but Ignore Content
# =======================================================
# Sometimes you want a directory to exist but not track any files inside it.
# A common pattern is to ignore all contents but re-include a .gitkeep file.
# This ensures the empty directory is created in the repository.

# Example: uploads directory
/uploads/*
!/uploads/.gitkeep